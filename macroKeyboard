#!/usr/bin/php
<?php
// TODO: get rid of the python dependency by using libevent in PHP itself with ffi, this is way too tedious but worth it
function runCommand(string $command) {
	return shell_exec("$command >/dev/null 2>/dev/null &");
}
echo "#### Macro Keyboard #####\n";
$inputId = trim(`cat /proc/bus/input/devices | grep -C 4 eyboard | grep sysrq | tail -n 1 | sed "s@.*event@@g" | sed "s@ .*@@g"`);
$pythonScript = <<<eof
#!/usr/bin/python3 

import os
import sys

from evdev import InputDevice, categorize, ecodes
dev = InputDevice('/dev/input/event'+sys.argv[1])
dev.grab()

try:
	for event in dev.read_loop():
		if event.type == ecodes.EV_KEY:
			key = categorize(event)
			print(key, flush=True)
except KeyboardInterrupt:
	pass

eof;
$tmpFile = tempnam("/tmp", "macroKeyboardHelper");
file_put_contents($tmpFile, $pythonScript);
chmod($tmpFile, 0755);
$process = proc_open("$tmpFile $inputId", [
	0 => ["pipe", "r"],
	1 => ["pipe", "w"], 
	2 => ["pipe", "r"]
], $pipes, "/tmp", []);
while($buttonText = trim(fgets($pipes[1]))) {
	if(!preg_match("/[kK]ey event at [0-9\.]+, [0-9]+ \(([^)]+)\), (up|down|hold)/", $buttonText, $button))
		continue;
	list($button, $action) = [$button[1], $button[2]];
	if($action == "hold")
		$button = "@".$button;
	if($action == "up")
		$button = "^".$button;
	$macrosFile = file("/home/danny/Dotfiles/macros.txt");
	$macros = [];
	for($i = 0; $i < count($macrosFile); $i++) {
		if(!empty($macrosFile[$i])) {
			$macros[trim($macrosFile[$i])] = trim($macrosFile[$i + 1]);
			$i++;
		}
	}
	if(isset($macros[$button]))
		runCommand($macros[$button]);
	elseif($action == "down") {
		$text = "Unmatched macro: $buttonText. \nLooking for button: $button\n";
		echo $text;
		system("notify-send 'Macro Keyboard' ".escapeshellarg($text));
	}
}
proc_close($process);
